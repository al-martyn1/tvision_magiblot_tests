ESC-mode

Без доп клавиш.

Альфа-Цифра - выдет символ из раскладки, в руской раскладке похоже юникод UTF-9

ESC - ESC
F1-F12
ESC [ 1 1 ~
ESC [ 1 2 ~
ESC [ 1 3 ~
ESC [ 1 4 ~
ESC [ 1 5 ~
ESC [ 1 7 ~
ESC [ 1 8 ~
ESC [ 1 9 ~
ESC [ 2 0 ~
ESC [ 2 1 ~
ESC [ 2 3 ~
ESC [ 2 4 ~

F1-F12 + Shift

ESC [ 2 3 ~
ESC [ 2 4 ~
ESC [ 2 5 ~
ESC [ 2 6 ~
ESC [ 2 8 ~
ESC [ 2 9 ~
ESC [ 3 1 ~
ESC [ 3 2 ~
ESC [ 3 3 ~
ESC [ 3 4 ~
ESC [ 2 3 ~
ESC [ 2 4 ~

F1-F12 + Alt - Также, как и без Alt, только двойной ESC, Alt+F4 - закрытие окна терминала, не передаётся
ESC ESC [ 1 1 ~
ESC ESC [ 1 2 ~
ESC ESC [ 1 3 ~
ESC ESC [ 1 5 ~
ESC ESC [ 1 7 ~
ESC ESC [ 1 8 ~
ESC ESC [ 1 9 ~
ESC ESC [ 2 0 ~
ESC ESC [ 2 1 ~
ESC ESC [ 2 3 ~
ESC ESC [ 2 4 ~


F1-F12 + AltShift, как и с шифтом, только двойной ESC, Alt+F4 - закрытие окна терминала, не передаётся

ESC ESC [ 2 3 ~
ESC ESC [ 2 4 ~
ESC ESC [ 2 5 ~
ESC ESC [ 2 8 ~
ESC ESC [ 2 9 ~
ESC ESC [ 3 1 ~
ESC ESC [ 3 2 ~
ESC ESC [ 3 3 ~
ESC ESC [ 3 4 ~
ESC ESC [ 2 3 ~
ESC ESC [ 2 4 ~

ESC [ A - Up
ESC [ B - Down
ESC [ C - Right
ESC [ D - Left

+Alt
ESC ESC [ A
ESC ESC [ B
ESC ESC [ C
ESC ESC [ D

+AltShift - как с альтом

А-Ц с альтом
ESC `
ESC 1
ESC 2
ESC 3
ESC 4
ESC 5
ESC q
ESC w
ESC e
ESC r

А-Ц +AltShift
ESC !
ESC @
ESC #
ESC Q
ESC W
ESC E
ESC A
ESC S
ESC D

0x09 Tab
ESC [ Z ShiftTab
0x7F - Backspace (и с Ctrl так же)
ESC 0x7F - Backspace + Alt
0x0D - Enter (и с Ctrl так же)
ESC 0x0D Enter + Alt
ESC - ESC


0x52
kbCtrlIns   = 0x0400
kbShiftIns  = 0x0500
kbIns       = 0x5200
kbAltIns    = 0xa200

0x53
kbCtrlDel   = 0x0600
kbShiftDel  = 0x0700
kbDel       = 0x5300
kbAltDel    = 0xa300

0x47
kbCtrlHome  = 0x7700
kbShiftHome =   ????
kbHome      = 0x4700
kbAltHome   = 0x9700

0x4F
kbCtrlEnd   = 0x7500
kbShiftEnd  =   ????
kbEnd       = 0x4f00
kbAltEnd    = 0x9f00


ESC [ 2 ~ INS
ESC [ 3 ~ DEL
ESC [ 1 ~ HOME
ESC [ 4 ~ END

С альтом
ESC ESC [ 2 ~ INS 
ESC ESC [ 3 ~ DEL 
ESC ESC [ 1 ~ HOME
ESC ESC [ 4 ~ END 

С контролом
ESC O A
ESC O B
ESC O C
ESC O D



Ctrl+1 - ничего
Ctrl+2 - 0x00
Ctrl+3 - ESC
Ctrl+4 - 0x1C
Ctrl+5 - 0x1D
Ctrl+6 - 0x1E
Ctrl+7 - 0x1F
Ctrl+8 - 0x7F
Ctrl+9 - ничего

Ctrl+QWERTY
0x11         kbCtrlQ
0x17         kbCtrlW
0x05         kbCtrlE
0x12         kbCtrlR
0x14         kbCtrlT
0x19         kbCtrlY

Ctrl+UIOP
0x15         kbCtrlU
0x09         kbCtrlI  ?
0x0F         kbCtrlO
0x10         kbCtrlP

0x01         kbCtrlA
0x13         kbCtrlS
0x04         kbCtrlD
0x06         kbCtrlF
0x07         kbCtrlG

0x08         kbCtrlH  ?
0x0A         kbCtrlJ  ?
0x0B         kbCtrlK
0x0C         kbCtrlL

0x1A         kbCtrlZ
0x18         kbCtrlX
0x03         kbCtrlC
0x16         kbCtrlV
0x02         kbCtrlB
0x0E         kbCtrlN
0x0D         kbCtrlM ?

0x1A PauseBreak



Ctrl+2 - 0x00
Ctrl+2 - 0x00
Ctrl+2 - 0x00
Ctrl+2 - 0x00
Ctrl+2 - 0x00
Ctrl+2 - 0x00
Ctrl+2 - 0x00
Ctrl+2 - 0x00
Ctrl+2 - 0x00


Русская раскладка 
0xD0 0xB9 - й
0xD0 0x99 - Й
ESC 0xD0 0xB9 + Alt
ESC 0xD0 0x99 + AltShift


ESC 0xD0 0xB9
ESC 0xD0 0x99
ESC 0xD1 0x86
ESC 0xD1 0x83
ESC 0xD0 0xBA
ESC 0xD0 0xB5
ESC 0xD0 0xBD
ESC 0xD0 0xB3
ESC 0xD1 0x88
ESC 0xD1 0x89
ESC 0xD0 0xB7
ESC 0xD1 0x85
ESC 0xD1 0x8A
ESC 0xD1 0x84
ESC 0xD1 0x8B
ESC 0xD0 0xB2
ESC 0xD0 0xB0
ESC 0xD0 0xBF
ESC 0xD1 0x80
ESC 0xD0 0xBE
ESC 0xD0 0xBB
ESC 0xD0 0xB4
ESC 0xD0 0xB6
ESC 0xD1 0x8D
ESC 0xD1 0x8F
ESC 0xD1 0x87
ESC 0xD1 0x81
ESC 0xD0 0xBC
ESC 0xD0 0xB8
ESC 0xD1 0x82
ESC 0xD1 0x8C
ESC 0xD0 0xB1
ESC 0xD1 0x8E

Национальные раскладки выдают коды в UTF-8, похоже.
Пока их будем игнорировать.


tkeys.h

Итого.

Для TV как мы делаем?

Нам нужно иметь скан-код и код клавиши. Обычно скан-код - high byte ushort, код клавиши - low byte ushort
Но предопределенные коды не всегда этому соответствуют

Надо посмотреть, как Tkey конструируется.
TKey::TKey(ushort keyCode, ushort shiftState) noexcept

В любом случае мы храним ushort keycode, который uint8 scanCode<<8 | uint8 key
Также мы храним ushort модификаторы. Больше хранить ничего не надо вроде.

Юникод (UTF-8) пока не поддерживаем и игнорируем, но потом можно доработать будет.
Восстановить юникодную последовательность можно так: пробегаемся от конца к началу, собираем 
входную последовательность в обратном порядке. Реверсируем её, и сканируем на предмет
стартового юникодного символа UTF8, и оттуда и читаем юникодный код.

Пока же определить, есть ли какой-то печатный символ во входной последовательности можно
через keycode (но надо разобраться).

В итоге, в качестве payload в конце входных последовательностей от терминала вполне может выступать uint32.
В качестве токенов - uchar.
таймаут обрабатываем не как входной символ, а как отдельное событие.
По таймауту если есть валидный индекс в последовательности trie, то берём результат оттуда, если валидного индекса нет - 
сбрасываем и начинаем заново.

Надо подумать, как бы сделать пока глобально каждый элемент trie вектора собственного размера


















